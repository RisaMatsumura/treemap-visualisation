package view;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.ArrayList;

import javax.swing.*;
import javax.swing.text.StyledEditorKit.FontSizeAction;

import model.DataTree;

import utility.Controller;



import java.awt.*;
import java.awt.event.*;

/**
 * Graphical User Interface and visual view of the application.
 * @author Jonas Pikiotas
 * @author Lai Chin Chung Louis
 * @version 1.0 
 */

public class GUI2 {

	/**
	 * Creates the Graphical User Interface and displays it on the screen.
	 */
	public static void main(String[] args) {
		
		GUI2 a = new GUI2();

	}
	
	private JFrame mainFrame;
	private JButton runButton;
	private JButton openButton;
	private JButton infoButton;
	private JTextArea mainArea;
	private JTextArea metaArea;
	private JTextField rootPath;
	private JToolBar toolbar;
	private JMenuBar menubar;
	private JMenu fileMenu;
	private JMenu helpMenu;
	
	private File rootFile;
	private DataTree tree;
	private Controller controller;
	
	public GUI2(){
		
		//creating components
		//this is the test comment
		
		mainArea = new JTextArea(20, 60);
		metaArea = new JTextArea(20, 10);
		JScrollPane mainPane = new JScrollPane(mainArea);
		//toolbar = new JToolBar();
		
		menubar = new JMenuBar();
		mainFrame.setJMenuBar(menubar);
		
		fileMenu = new JMenu("File");
		menubar.add(fileMenu);
		
		helpMenu = new JMenu("Help");
		menubar.add(helpMenu);
		
		JMenuItem openItem =
				new JMenuItem("Open");
		fileMenu.add(openItem);
		JMenuItem quitItem =
				new JMenuItem("Quit");
		fileMenu.add(quitItem);
		
		//infoButton = new JButton(createImageIcon("/images/info.png"));
		//openButton = new JButton(createImageIcon("/images/open.png"));
		//runButton = new JButton(createImageIcon("/images/run.png"));
		
		//rootPath = new JTextField(50);
		
		//properties of the components
		//runButton.setToolTipText("Traverse the root folder");
		//rootPath.setText("Select Root directory...");
		//rootPath.setFont(new Font("Serif", Font.BOLD, 16));
		
		metaArea.setMargin(new Insets(5, 5, 5, 5));
		mainArea.setMargin(new Insets(5, 5, 5, 5));
		
		mainArea.setEditable(false);
		metaArea.setEditable(false);
		//rootPath.setEditable(false);
		
		
		
		//creating containers
		mainFrame = new JFrame("TreeMap");
		
		JPanel rootBox = new JPanel();
		//JPanel areaBox = new JPanel();
		
		
		//Specifying Layout Managers
		mainFrame.getContentPane().setLayout(new BorderLayout());
		rootBox.setLayout(new BorderLayout());
		//areaBox.setLayout(new BorderLayout());
		
		//Adding components to the containers
		//toolbar.add(infoButton);
		//toolbar.add(runButton);
		
	
		//rootBox.add(rootPath, BorderLayout.WEST);
		//rootBox.add(openButton, BorderLayout.EAST);
		//rootBox.add(toolbar, BorderLayout.NORTH);
		rootBox.add(menubar, BorderLayout.NORTH);
		
		
		//areaBox.add(metaArea, BorderLayout.WEST);
		//areaBox.add(mainPane, BorderLayout.EAST);
		
		mainFrame.getContentPane().add(rootBox, BorderLayout.NORTH);
		//mainFrame.getContentPane().add(areaBox, BorderLayout.CENTER);
		
		
		//Event handling
		mainFrame.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
		
		mainFrame.addWindowListener(new WindowAdapter(){
			public void windowClosing(WindowEvent e){
				exitApp();
			}
		});
		
		
		//openButton.addActionListener(new ActionListener(){
			//public void actionPerformed(ActionEvent e){
				
				////JFileChooser chooser = new JFileChooser();
				//chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
				//int returnVal = chooser.showOpenDialog(mainFrame);
				
				//rootFile = chooser.getSelectedFile();
				
				//if(returnVal == JFileChooser.APPROVE_OPTION){
					//rootPath.setText(rootFile.getPath());
				//}
				
			//}
		//});
		
		//runButton.addActionListener(new ActionListener(){
			//public void actionPerformed(ActionEvent e){
				//if(!rootPath.getText().contains("\\")){
					//JOptionPane.showMessageDialog(mainFrame, "You need to select root folder first!", 
							//"Error!", JOptionPane.ERROR_MESSAGE);
				//} else {
					
					//controller = new Controller(rootFile);
					//tree = new DataTree(manager.getFileList(rootFile));
					//mainArea.setText("-"+controller.getDataTree().getTop().getName()+"\n");
					//mainArea.setText(controller.getDataTree().printAllData());
					//metaArea.setText("Root Folder Size:\n" + controller.getDataTree().getRootFolderSize());
					//metaArea.append("\n\nNumber of Folders:\n" + controller.getDataTree().getNumberOfFolders());
				//}
			//}
		//});
		
		
		//display the GUI
		mainFrame.setPreferredSize(new Dimension(820, 500));
		mainFrame.setResizable(false);
		mainFrame.pack();
		mainFrame.setVisible(true);
		
	}
	
	/**
	 * Function that shows JOptionPane Dialog before closing the program
	 */
	private void exitApp(){
		int response = JOptionPane.showConfirmDialog(mainFrame, "Do you really want to quit?", 
				"Quit?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
		
		if(response == JOptionPane.YES_OPTION){
			System.exit(0);
		}
		
	}
	/**
	 * Checks if the image path is valid and fetches the image
	 * @param path where the image is located
	 * @return ImageIcon or null if the path was invalid
	 */
	//private ImageIcon createImageIcon(String path){
		
		//java.net.URL imgURL = GUI.class.getResource(path);
		//if(imgURL != null){
			//return new ImageIcon(imgURL);
		//} else {
			//JOptionPane.showMessageDialog(mainFrame, "Couldn't find the images, exiting the program...", 
					//"Error!", JOptionPane.ERROR_MESSAGE);
			//System.exit(1);
			//return null;
		//}
	//}

}
