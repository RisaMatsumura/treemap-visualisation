package TreeMap;

import java.awt.Color;
import java.util.ArrayList;

/**
 * the ColourScheme class is used to facilitate the change of color scheme in the treemap
 * @author Luke
 *
 */
public class ColourScheme
{
	private ArrayList<Color> colourScheme;
	private String ColourSchemeName;

	/**
	 * create a set of colors according to the String input
	 * @param choice
	 */
	public ColourScheme(String choice)
	{
		colourScheme = new ArrayList<Color>();
		ColourSchemeName = choice;
		if(choice.equals("red"))
		{
			colourScheme.add(new Color(0x00,	0x00,	0x00));	// #000000
			colourScheme.add(new Color(0x4D,	0x10,	0x10));	// #4D1010
			colourScheme.add(new Color(0x8B,	0x00,	0x00));	// #8B0000
			colourScheme.add(new Color(0xC1,	0x1B,	0x17));	// #C11B17
			colourScheme.add(new Color(0xC1,	0x1B,	0x17));	// #FF0000
			colourScheme.add(new Color(0xC1,	0x1B,	0x17)); // #C36241
			colourScheme.add(new Color(0xC1,	0x1B,	0x17)); // #F76541
			colourScheme.add(new Color(0xC1,	0x1B,	0x17));	// #E78A61
			colourScheme.add(new Color(0xC1,	0x1B,	0x17));	// #F9A37E
			colourScheme.add(new Color(0xC1,	0x1B,	0x17));	// #FFFFFF
		}
		else if(choice.equals("orange"))
		{
			colourScheme.add(new Color(0x00,	0x00,	0x00));	// #000000
			colourScheme.add(new Color(0x46,	0x30,	0x08));	// #463008
			colourScheme.add(new Color(0x74,	0x57,	0x21));	// #745721
			colourScheme.add(new Color(0xA4,	0x6E,	0x0A));	// #A46E0A
			colourScheme.add(new Color(0xF2,	0x9E,	0x01));	// #F29E01
			colourScheme.add(new Color(0xFE,	0xBB,	0x2A));	// #FEBB2A
			colourScheme.add(new Color(0xFD,	0xD0,	0x17));	// #FDD017
			colourScheme.add(new Color(0xFF,	0xEC,	0x7A));	// #FFEC7A
			colourScheme.add(new Color(0xFF,	0xE9,	0xC1));	// #FFE9C1
			colourScheme.add(new Color(0xFF,	0xFF,	0xFF));	// #FFFFFF
		}
		else if(choice.equals("green"))
		{
			colourScheme.add(new Color(0x00,	0x00,	0x00));	// #000000
			colourScheme.add(new Color(0x25,	0x41,	0x17));	// #254117
			colourScheme.add(new Color(0x34,	0x72,	0x35));	// #347235
			colourScheme.add(new Color(0x46,	0x8F,	0x29));	// #468F29
			colourScheme.add(new Color(0x4C,	0xC5,	0x52));	// #4CC552
			colourScheme.add(new Color(0x00,	0xFF,	0x00));	// #00FF00
			colourScheme.add(new Color(0xB1,	0xFB,	0x17));	// #B1FB17
			colourScheme.add(new Color(0xFF,	0xFF,	0x00));	// #FFFF00
			colourScheme.add(new Color(0xFA,	0xFA,	0x7A));	// #FAFA7A
			colourScheme.add(new Color(0xFF,	0xFF,	0xFF));	// #FFFFFF
		}
		else if(choice.equals("blue"))
		{
			colourScheme.add(new Color(0x00,	0x00,	0x00));	// #000000
			colourScheme.add(new Color(0x15,	0x1B,	0x54));	// #151B54
			colourScheme.add(new Color(0x22,	0x28,	0x98));	// #222898
			colourScheme.add(new Color(0x0F,	0x45,	0xC3));	// #0F45C3
			colourScheme.add(new Color(0x11,	0x72,	0xD2));	// #1172D2
			colourScheme.add(new Color(0x28,	0x9C,	0xDB));	// #289CDB
			colourScheme.add(new Color(0xAD,	0xDF,	0xFF));	// #ADDFFF
			colourScheme.add(new Color(0x00,	0xFF,	0xFF));	// #00FFFF
			colourScheme.add(new Color(0xE0,	0xFF,	0xFF));	// #E0FFFF
			colourScheme.add(new Color(0xFF,	0xFF,	0xFF));	// #FFFFFF
		}
		else if(choice.equals("purple"))
		{
			colourScheme.add(new Color(0x00,	0x00,	0x00));	// #000000
			colourScheme.add(new Color(0x37,	0x16,	0x62));	// #371662
			colourScheme.add(new Color(0x4C,	0x1C,	0x8B));	// #4C1C8B
			colourScheme.add(new Color(0x6C,	0x2D,	0xC7));	// #6C2DC7
			colourScheme.add(new Color(0x8E,	0x35,	0xEF));	// #8E35EF
			colourScheme.add(new Color(0xB0,	0x41,	0xFF));	// #B041FF
			colourScheme.add(new Color(0xCB,	0x80,	0xFF));	// #CB80FF
			colourScheme.add(new Color(0xF1,	0x51,	0xFF));	// #F151FF
			colourScheme.add(new Color(0xF9,	0xB7,	0xFF));	// #F9B7FF
			colourScheme.add(new Color(0xFF,	0xFF,	0xFF));	// #FFFFFF
		}
		else if(choice.equals("bw"))
		{
			colourScheme.add(new Color(0x00,	0x00,	0x00));	// #000000
			colourScheme.add(new Color(0x2F,	0x4F,	0x4F));	// #2F4F4F
			colourScheme.add(new Color(0x54,	0x54,	0x54));	// #545454
			colourScheme.add(new Color(0x80,	0x80,	0x80));	// #808080
			colourScheme.add(new Color(0xA8,	0xA8,	0xA8));	// #A8A8A8
			colourScheme.add(new Color(0xC0,	0xC0,	0xC0));	// #C0C0C0
			colourScheme.add(new Color(0xCD,	0xCD,	0xCD));	// #CDCDCD
			colourScheme.add(new Color(0xD9,	0xD9,	0xF3));	// #D9D9F3
			colourScheme.add(new Color(0xE6,	0xE8,	0xFA));	// #E6E8FA
			colourScheme.add(new Color(0xFF,	0xFF,	0xFF));	// #FFFFFF
		}

	}



	/**
	 * get the color by its index
	 * @param index
	 * @return the current color
	 */
	public Color getColour(int index) {
		return colourScheme.get(index);
	}

	/**
	 * 
	 * @return the name of the current color scheme
	 */
	public String getColourSchemeName() {
		return ColourSchemeName;
	}

}
