package TreeMap;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class TreeMap extends JPanel{
	
	private ArrayList<ArrayList<Shape>> listOfShapes;
	
	public void addShape(int layer, Shape theShape){
		if (layer>=listOfShapes.size()){
			for (int i=0; i<=layer; i++){
				listOfShapes.add(new ArrayList<Shape>());
			}
			
		}
		
		listOfShapes.get(layer).add(theShape);
	}

	
	public TreeMap(){
		
		super();
		listOfShapes = new ArrayList<ArrayList<Shape>>();
        this.setBackground(Color.BLACK);
        this.setPreferredSize(new Dimension(670, 354));
	}
	
	public void paintComponent(Graphics g){
		
		
		super.paintComponent(g);
		for (int i = 0 ; i<listOfShapes.size(); i++){
			for (int j = 0; j<listOfShapes.get(i).size(); j++){
				Rectangle current = (Rectangle) listOfShapes.get(i).get(j);
				int height = current.getHeight();
				int width = current.getWidth();
				int x = current.getX();
				int y = current.getY();
					int value = 30*i;
					g.setColor(new Color(value, value, value));
					g.fillRect(x, y, width, height);
					
			}
		}
	}
	
	public TreeMap get(){
		return this;
	}
	public ArrayList<ArrayList<Shape>> getListOfShapes(){
		return listOfShapes;
	}
	
	
	


}
